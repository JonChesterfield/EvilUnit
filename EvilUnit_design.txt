This library is intended to reduce the labour involved in writing test cases for C.

1/ The implementation is C89. It compiles cleanly under gcc and clang, will check MSVC at some point.

2/ Tests will self-install. There is no need to write a function prototype elsewhere, or to register the test in a suite somewhere. 

3/ Easy to use in existing projects. Specifically, no external dependencies and an easy compilation model.

The premise is to organise a set of tests in files containing a language that closely resembles C. Each file is viewed as a node in a graph defining the test dependencies.

Compilation turns each file into a single exposed function, called evilunit_node_something, which allows functions within the library to traverse this graph. Provided one file is marked "main", or "root", to provide a starting point, control can be applied to how the test modules are executed. At present, a depth first search from the root node creates a set of test modules which are executed leaf first, sequentially, avoiding running the same test twice.

The header file only contains macros, so if included in a file which does not use the provided functionality it disappears entirely under the preprocessor.
The source file compiles to expose half a dozen or so symbols. 
A MODULE() defined in user code exposes a single external symbol.
